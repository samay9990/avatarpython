{"name": "test_verify_that_user_can_edit_claim_2[Theft-Liability-Adam Hunt-GORDON-Open]", "status": "failed", "statusDetails": {"message": "AssertionError: assert False", "trace": "request = <FixtureRequest for <Function test_verify_that_user_can_edit_claim_2[Theft-Liability-Adam Hunt-GORDON-Open]>>\n\n    @pytest.mark.usefixtures(*function_args)\n    def scenario_wrapper(request):\n>       _execute_scenario(feature, scenario, request, encoding)\n\n..\\..\\venv\\lib\\site-packages\\pytest_bdd\\scenario.py:200: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\..\\venv\\lib\\site-packages\\pytest_bdd\\scenario.py:166: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n..\\..\\venv\\lib\\site-packages\\pytest_bdd\\scenario.py:115: in _execute_step_function\n    step_func(**kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @then(parsers.cfparse(\"User should not see the red toast message\"))\n    def verify_user_should_not_see_error_toast_message():\n        message = avatartoast.get_error_toast_message_if_exist()\n        if message is not None:\n            print(\"ERROR TOAST MESSAGE IS: \",message)\n>           assert False\nE           assert False\n\ntests\\test_avatar_editclaim.py:129: AssertionError"}, "description": "TestCases/claim_edit.feature: Verify that user can edit claim - 2", "attachments": [{"name": "screenshot", "source": "85e971eb-24ee-43bc-9ef7-4e135e44dae4-attachment.png", "type": "image/png"}, {"name": "stdout", "source": "11e63e4e-190c-4493-b80e-81cfe3bd1818-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "claim_type", "value": "'Theft'"}, {"name": "loss_type", "value": "'Liability'"}, {"name": "service_rep", "value": "'Adam Hunt'"}, {"name": "event_name", "value": "'GORDON'"}, {"name": "claim_status", "value": "'Open'"}], "start": 1599334234576, "stop": 1599334286902, "uuid": "5d21888c-4bd6-40dd-8494-bd1a6f0deb63", "historyId": "c1dc4c004c171f91e2a9b856acd8740e", "testCaseId": "91d8947c26183357068a9e961ec6557c", "fullName": "features.tests.test_avatar_editclaim#test_verify_that_user_can_edit_claim_2", "labels": [{"name": "tag", "value": "p1"}, {"name": "tag", "value": "claims"}, {"name": "tag", "value": "@pytest.mark.usefixtures('event_name', 'claim_status', 'service_rep', 'loss_type', 'claim_type')"}, {"name": "tag", "value": "web"}, {"name": "parentSuite", "value": "features.tests"}, {"name": "suite", "value": "test_avatar_editclaim"}, {"name": "host", "value": "WIN-T79L21LL3M3"}, {"name": "thread", "value": "7784-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "features.tests.test_avatar_editclaim"}]}